Metadata-Version: 2.4
Name: promis-preprocess
Version: 0.1.0
Summary: PROMIS DICOM preprocessing pipeline
Author-email: Alexandre Calado <alexandreluiscalado@gmail.com>
Requires-Python: >=3.12
Description-Content-Type: text/markdown
Requires-Dist: SimpleITK>=2.3.0
Requires-Dist: pandas>=1.5.0
Requires-Dist: openpyxl>=3.0.0
Requires-Dist: pyarrow>=10.0.0
Requires-Dist: tqdm>=4.64.0
Requires-Dist: PyYAML>=6.0.0

# PROMIS Dataset Preprocessing Pipeline

A specialized Python pipeline for preprocessing and organizing the PROMIS (Prostate MR Image Segmentation) Open Access dataset for machine learning pipelines. This tool handles DICOM medical imaging data with comprehensive metadata extraction, series organization, and ML-ready data preparation.

## About PROMIS Dataset

The PROMIS dataset is a publicly available prostate MRI dataset designed for prostate cancer segmentation and analysis. It contains multi-parametric MRI sequences including T2-weighted, DWI (Diffusion-Weighted Imaging), and ADC (Apparent Diffusion Coefficient) images from multiple patients and studies.

## Generalizability

While specifically designed for the PROMIS dataset, this pipeline can be adapted for other DICOM datasets with minimal changes. The main requirement is an Excel file (`.xlsx`) that maps series descriptions from DICOM files to generic sequence labels (e.g., `t2_axial`, `dwi_b1400_axial`, `adc_axial`). This mapping file should contain:

- **Patient ID**: Patient identifier
- **Series Description**: Original series description from DICOM metadata
- **Generic Sequence Label**: Standardized label for the sequence type

This flexible approach allows the pipeline to work with various DICOM datasets by simply updating the mapping file and configuration parameters.

## Project Structure

```
promis_preprocess/
├── config.yaml               # YAML configuration file
├── src/promis_preprocess/    # Main package
│   ├── config_loader.py      # YAML configuration loader
│   ├── dicom_processing.py   # Core DICOM processing functions
│   ├── metadata_extraction.py # Metadata extraction utilities
│   └── analysis_utils.py     # Analysis and reporting functions
├── scripts/                  # Processing scripts
│   ├── process_studies.py    # Main study processing script
│   └── organize_metadata.py  # Metadata organization script
├── notebooks/                # Jupyter notebooks
│   └── exploration.ipynb     # Interactive analysis notebook
├── pyproject.toml           # Python dependencies
└── README.md                # This file
```

## Key Features

- **Multi-sequence Processing**: Handles T2-weighted, DWI, and ADC MRI sequences
- **Series Organization**: Automatically organizes DICOM series by type and study
- **Metadata Extraction**: Comprehensive extraction of DICOM metadata for ML pipelines
- **Resampling & Alignment**: Resamples all sequences to a reference series for consistency
- **ML-Ready Output**: Generates organized data structure suitable for machine learning
- **Error Handling**: Robust error handling with detailed logging and reporting
- **YAML Configuration**: Flexible configuration system for easy customization

## Installation

```bash
# Clone the repository
git clone <repository-url>
cd promis_preprocess

# Install dependencies
pip install -e .
```

## Usage

### 1. Configure the Pipeline

Edit `config.yaml` to set your data paths and processing parameters:

### 2. Process the Dataset

```bash
# Step 1: Organize metadata and extract DICOM information
python scripts/organize_metadata.py

# Step 2: Process studies and resample to reference series
python scripts/process_studies.py
```

## Output Structure

The pipeline generates an organized structure suitable for ML pipelines:

```
processed/
├── patient_001/
│   ├── study_001/
│   │   ├── image_T2.mha      # T2-weighted image
│   │   ├── image_DWI.mha     # DWI image 
│   │   └── image_ADC.mha     # ADC image
│   └── study_002/
│       └── ...
└── patient_002/
    └── ...

metadata/
├── series_metadata.parquet    # Comprehensive metadata
├── processing_log.txt         # Processing log
└── summary_report.txt         # Summary statistics
```

## ML Pipeline Integration

The processed data is ready for machine learning pipelines:

- **Consistent Format**: All images resampled to same resolution
- **Organized Structure**: Patient/Study hierarchy for easy data loading
- **Standard Formats**: MHA format compatible with medical imaging libraries
